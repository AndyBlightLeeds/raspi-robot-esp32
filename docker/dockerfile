# Use this to build and run the Micro-ROS client.

## Merged docker files from ROS.

FROM ubuntu:focal

# setup environment
ENV DEBIAN_FRONTEND noninteractive
ENV LANG C.UTF-8
ENV LC_ALL C.UTF-8
ENV ROS_DISTRO foxy

# setup timezone
RUN echo 'Etc/UTC' > /etc/timezone && \
    ln -s /usr/share/zoneinfo/Etc/UTC /etc/localtime && \
    apt-get update && \
    apt-get install -q -y --no-install-recommends tzdata && \
    rm -rf /var/lib/apt/lists/*

# install packages
RUN apt-get update && apt-get install -q -y --no-install-recommends \
    dirmngr \
    gnupg2 \
    curl \
    gnupg \
    build-essential \
    git \
    software-properties-common \
    lsb-release \
    && rm -rf /var/lib/apt/lists/* \
    && add-apt-repository universe

# Add ROS2 keys and distro
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key  -o /usr/share/keyrings/ros-archive-keyring.gpg
RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null

# install ros2 packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    ros-foxy-ros-core=0.9.2-1* \
    ros-foxy-ros-base=0.9.2-1* \
    && rm -rf /var/lib/apt/lists/*

# install bootstrap tools
RUN apt-get update && apt-get install --no-install-recommends -y \
    python3-colcon-common-extensions \
    python3-colcon-mixin \
    python3-rosdep \
    python3-vcstool \
    && rm -rf /var/lib/apt/lists/*

# bootstrap rosdep
RUN rosdep init && \
  rosdep update --rosdistro $ROS_DISTRO

# setup colcon mixin and metadata
RUN colcon mixin add default \
      https://raw.githubusercontent.com/colcon/colcon-mixin-repository/master/index.yaml && \
    colcon mixin update && \
    colcon metadata add default \
      https://raw.githubusercontent.com/colcon/colcon-metadata-repository/master/index.yaml && \
    colcon metadata update

## My additions for micro-ROS and some useful tools.
# Install basic tools.
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        sudo \
        ccache \
        vim \
        nano \
        wget \
        apt-utils \
        gdb \
        less \
    && rm -rf /var/lib/apt/lists/*

# Setup links for ccache.
RUN cd /usr/local/bin/ \
    && ln -s ccache gcc && ln -s ccache g++ \
    && ln -s ccache cc && ln -s ccache c++

# Install ROS2 packages.
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        ros-foxy-desktop=0.9.2-1* \
        python3-vcstool \
        joystick \
    && rm -rf /var/lib/apt/lists/*

# Add MicroROS specific packages and an editor.
# The packages were identified when running create_agent.sh.
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        python3-pip \
        libfl-dev libfl2 \
        bison \
        libncurses-dev libncurses5-dev \
        usb.ids usbutils \
        binfmt-support \
        clang-10 clang-tidy-10 clang-tools-10 \
        cpp-9 g++-9 gcc-10-base gcc-9 gcc-9-base lib32gcc-s1 \
        lib32stdc++6 libasan5 libatomic1 libc6-i386 libcc1-0 \
        libclang-common-10-dev libclang-cpp10 libgc1c2 \
        libgcc-9-dev libgcc-s1 libgfortran5 libgomp1 libitm1 \
        liblsan0 libobjc-9-dev libobjc4 libomp-10-dev libomp5-10 libpfm4 \
        libpipeline1 libquadmath0 libstdc++-9-dev libstdc++6 libtsan0 \
        libubsan1 libz3-4 libz3-dev llvm-10 llvm-10-dev llvm-10-runtime llvm-10-tools \
        clang-tidy \
        libasio-dev \
    && rm -rf /var/lib/apt/lists/*

# Create user with UID and GID matching those on my PC.
# This allows the user to delete build products created in the source tree.
# Also adds the user to sudoers list.
ARG USER_ID=build
RUN groupadd -g 1000 $USER_ID && \
    useradd -u 1000 -g 1000 -m -s /bin/bash $USER_ID && \
    mkdir -p /etc/sudoers.d/ && \
    echo "$USER_ID ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/$USER_ID && \
    chmod 0440 /etc/sudoers.d/$USER_ID
ENV HOME /home/$USER_ID

# Add user to the dialout group to be able to write the serial USB device.
RUN sed "s/^dialout.*/&$USER_ID/" /etc/group -i \
    && sed "s/^root.*/&$USER_ID/" /etc/group -i

# Source ROS2 setup script for each shell.
RUN echo ". /opt/ros/foxy/setup.bash" > /home/build/.bash_aliases
RUN echo "TERM=xterm-256color" >> /home/build/.bash_aliases

# Change ownership of user home directory to user:user.
RUN chown -R $USER_ID:$USER_ID /home/$USER_ID/

# Use display
ENV DISPLAY :1.0

# Change to user.
USER $USER_ID
